kind: ConfigMap
apiVersion: v1
metadata:
  namespace: {{ meta.namespace }}
  name: collectd-config

# This is templated, might be able to a loop/list of files?
# Can run the config generator first, and put the files into a known location
# {% for plugin in collectd_plugins %}
#   {% include "{{collectd_conf_output_dir}}/{{ plugin }}.conf.j2" %}
# {% endfor %}

data:
  node-collectd.conf: |
    #Hostname localhost
    FQDNLookup true

    AutoLoadPlugin false
    TypesDB "/usr/share/collectd/types.db"
    Interval {{ collectd_interval }}
    Timeout 2
    ReadThreads 5
    WriteThreads 5

    # ------- Load Plugins -------
    {% for plugin in collectd_plugins %}
    {%- include "{{collectd_conf_output_dir}}/{{ plugin }}.conf.j2" -%}
    {% endfor %}
    # Emma ended

    {% if 'ipmi' in collectd_plugins %}
    LoadPlugin ipmi
    {% endif %}

    # ##############################################################################
    # # Plugin configuration                                                       #
    # #----------------------------------------------------------------------------#
    # # In this section configuration stubs for each plugin are provided. A desc-  #
    # # ription of those options is available in the collectd.conf(5) manual page. #
    # ##############################################################################

    {% if 'ipmi' in collectd_plugins %}
    <Plugin ipmi>
        <Instance "local">
           Username {{ collectd_plugin_ipmi_username }}
           Password {{ collectd_plugin_ipmi_password }}
    #		Sensor "some_sensor"
    #		Sensor "another_one"
    #		IgnoreSelected false
    #		NotifySensorAdd false
    #		NotifySensorRemove true
    #		NotifySensorNotPresent false
    #		NotifyIPMIConnectionState false
    #		SELEnabled false
    #		SELClearEvent false
        </Instance>
    #	<Instance "remote">
    #		Host "server.example.com"
    #		Address  "1.2.3.4"
    #		Username "user"
    #		Password "secret"
    #		#AuthType "md5"
    #		Sensor "some_sensor"
    #		Sensor "another_one"
    #		IgnoreSelected false
    #		NotifySensorAdd false
    #		NotifySensorRemove true
    #		NotifySensorNotPresent false
    #		NotifyIPMIConnectionState false
    #		SELEnabled false
    #		SELClearEvent false
    #	</Instance>
    </Plugin>
    {% endif %}

    {% if 'processes' in collectd_plugins %}
    <Plugin processes>
    #	CollectFileDescriptor true
    #	CollectContextSwitch true
    #	CollectMemoryMaps true
    #	Process "name"
    #	ProcessMatch "name" "regex"
    #	<Process "collectd">
    #		CollectFileDescriptor false
    #		CollectContextSwitch false
    #	</Process>
    #	<ProcessMatch "name" "regex">
    #		CollectFileDescriptor false
    #		CollectContextSwitch true
    #	</Process>
    </Plugin>
    {% endif %}
